
;; Function _putchar (_putchar, funcdef_no=0, decl_uid=2587, cgraph_uid=1, symbol_order=0)

_putchar (char c)
{
  int D.2590;
  long int _1;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = write (1, &c, 1);
  _4 = (int) _1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 4 (_4 - 4 )
Partition 5 (_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (_5(D) - 5 )


Partition map 

Partition 0 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_4 - 4 )
Partition 2 (_5(D) - 5 )

_putchar (char c)
{
  int D.2590;
  long int _1;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = write (1, &c, 1);
  _4 = (int) _1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = write (1, &c, 1);

(insn 8 7 9 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "_putchar.c":12:10 -1
     (nil))

(insn 9 8 10 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) "_putchar.c":12:10 -1
     (nil))

(insn 10 9 11 (set (reg:DI 4 si)
        (reg:DI 87)) "_putchar.c":12:10 -1
     (nil))

(insn 11 10 12 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "_putchar.c":12:10 -1
     (nil))

(call_insn 12 11 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x7f8e4b63da00 write>) [0 write S1 A8])
            (const_int 0 [0]))) "_putchar.c":12:10 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

(insn 13 12 0 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "_putchar.c":12:10 -1
     (nil))

;; _4 = (int) _1;

(insn 14 13 0 (set (reg:SI 83 [ _4 ])
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "_putchar.c":12:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 15 14 16 2 (nil) [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 17 16 18 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _4 ])) "_putchar.c":12:10 -1
     (nil))

(jump_insn 18 17 19 (set (pc)
        (label_ref 0)) "_putchar.c":12:10 -1
     (nil))

(barrier 19 18 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 18.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg:SI 85)
        (reg:SI 5 di [ c ])) "_putchar.c":11:1 -1
     (nil))
(insn 3 2 4 2 (set (reg:QI 86)
        (subreg:QI (reg:SI 85) 0)) "_putchar.c":11:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])
        (reg:QI 86)) "_putchar.c":11:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "_putchar.c":12:10 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) "_putchar.c":12:10 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 87)) "_putchar.c":12:10 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "_putchar.c":12:10 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x7f8e4b63da00 write>) [0 write S1 A8])
            (const_int 0 [0]))) "_putchar.c":12:10 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "_putchar.c":12:10 -1
     (nil))
(insn 14 13 17 2 (set (reg:SI 83 [ _4 ])
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "_putchar.c":12:10 -1
     (nil))
(insn 17 14 21 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _4 ])) "_putchar.c":12:10 -1
     (nil))
(insn 21 17 22 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "_putchar.c":13:1 -1
     (nil))
(insn 22 21 0 2 (use (reg/i:SI 0 ax)) "_putchar.c":13:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

