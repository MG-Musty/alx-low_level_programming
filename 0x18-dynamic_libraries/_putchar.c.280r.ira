
;; Function _putchar (_putchar, funcdef_no=0, decl_uid=2587, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000

   Insn 22(l0): point = 0
   Insn 21(l0): point = 2
   Insn 17(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 4(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [7..8]
 a3(r87): [15..18]
 a4(r86): [21..22]
 a5(r85): [23..24]
Compressing live ranges: from 27 to 12 - 44%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..5]
 a3(r87): [6..7]
 a4(r86): [8..9]
 a5(r85): [10..11]
  pref0:a3(r87)<-hr4@1500
  pref1:a5(r85)<-hr5@1500
  pref2:a0(r84)<-hr0@1500
  pref3:a2(r82)<-hr0@1500
  regions=1, blocks=3, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0    5:r85  l0     0
    4:r86  l0     0    3:r87  l0     0
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_putchar

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d,4u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 120{97d,23u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 82 83 84 85 86 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg:SI 85)
        (reg:SI 5 di [ c ])) "_putchar.c":11:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ c ])
        (nil)))
(insn 3 2 4 2 (set (reg:QI 86)
        (subreg:QI (reg:SI 85) 0)) "_putchar.c":11:1 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])
        (reg:QI 86)) "_putchar.c":11:1 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "_putchar.c":12:10 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) "_putchar.c":12:10 66 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 87)) "_putchar.c":12:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "_putchar.c":12:10 67 {*movsi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x7f8e4b63da00 write>) [0 write S1 A8])
            (const_int 0 [0]))) "_putchar.c":12:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "_putchar.c":12:10 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 17 2 (set (reg:SI 83 [ _4 ])
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "_putchar.c":12:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (nil)))
(insn 17 14 21 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _4 ])) "_putchar.c":12:10 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _4 ])
        (nil)))
(insn 21 17 22 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "_putchar.c":13:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 22 21 0 2 (use (reg/i:SI 0 ax)) "_putchar.c":13:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

